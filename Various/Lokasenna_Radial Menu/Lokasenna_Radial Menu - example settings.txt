--[[
		Settings for Lokasenna_Radial Menu.lua
	
		This file is written as a Lua table, and must use the appropriate 
	syntax with regard to tables, indices, keys, strings, etc, etc. If
	you run Radial Menu and get an error loading the menu, it either
	couldn't find this file or you've got some incorrect Lua in it.

	A few general notes:

	- Due to quirks with the function that loads these settings into 
	the script, all indices must include square brackets and/or quotation 
	marks rather than being left bare, i.e. 

					[3]				not		3
					["col_main"]	not		col_main
	
	
	- Colors can be specified per button, per menu, or globally (see
	table index [-1]). Buttons with no colors specified will use their
	menu's settings, menus will use the global settings.
	
	- When a button is assigned to an action that's toggled On, the button
	  will light up; if the mouse is hovering or clicked on it, the toggle 
	  color will be blended with the hover or background color, respectively.
	
	- Menus are numbered starting from 0, and menu numbers do NOT need to
	  be contiguous - that is, 1 2 3 4 9 11 15 20 25 is fine, so feel free
	  to organize your menus by number however you want.
	
	- Buttons are numbered starting from 0, and button numbers DO need to
	  be contiguous.
	  
	- You can add a button in the center of the ring by giving it the
	  number [-1]
	  
	
	  


	Menu #:
	[0] = {	
	
		(There's no limit to the number of menus you can have)
		
		["alias"] = "blah",			A name to use for this menu so you don't have
									to remember menu numbers. Displayed in the
									menu list, and can be used in button actions
									and context boxes. (See below)
	
		["col_main"] = {			Normal button color for buttons in this menu
			[1] = 0.0,				R
			[2] = 1.0,				G	(values are from 0-1)
			[3] = 1.0,				B
			
		["col_tog"] = {				Toggled color, for use with
			...						i.e. "Options: Toggle metronome"
			
		["col_hvr"] = {				Mouse-over color
			...
			
		["col_bg"] = {				Background color
			...
		
	
	
		Button #:
		[0] = {
		
			(Maximum of 16 buttons per menu)
		
			Button settings:
			
			["lbl"] = "cool",			The button's label
			
										| or ; will wrap the text to a new line,
										i.e. "Multi|line;text"
			
			["act"] = "menu 1",			Action to perform / menu to open. 
			
										Valid commands are...
										
										Action IDs:											
										40364	
											
										Script/extension actions:
										_SWS_AWMPLAYTOG
										_RS2bf8e77e958d48b42c7d7b585790ee0427a96a7e
										
											Note: Because the MIDI Editor uses its own
											action list, when running MIDI actions you
											may need to enter them as 'midi 40364' to
											keep Reaper from getting confused.
										
										Open a menu:
										menu 20		(opens menu 20)
										menu stuff	(opens the menu with alias 'stuff')
										
										back		Return to the previous menu
										base		Return to the original menu
													(either menu 0 or the specified menu
													for a given Reaper context)
													
										quit		Close the script
										
										
										Special commands:
										
										midi 12345	Send an action to the current MIDI
													editor rather than the main window
					
										xN 12345	Perform the action N times each time
													the button is clicked.
										
													e.g.	x3 40001
													
													will insert three new tracks each
													time the button is clicked
													
													
													
										repeat N "12345"	Repeats the action every N
												 '12345'	seconds while the mouse button
															is held down.
												 
													e.g.	repeat 0.5 "40001"
													
													will insert a new track every 0.5 seconds
													
										The special commands can be combined, in (I think)
										any order:
										
										midi x3 12345		Perform MIDI action 12345 three times
										
										repeat 0.5 "x3 12345"	Perform action 12345 three times,
																every 0.5 seconds.
																
										
										
													
													
					
					

					
										
										
	
			["col_main"] = {			Normal button color
				[1] = 0.0,				R
				[2] = 1.0,				G	(values are from 0-1)
				[3] = 1.0,				B
				
			["col_tog"] = {				Toggled color, for use with
				...						i.e. "Options: Toggle metronome"
				
			["col_hvr"] = {				Mouse-over color
				...
				
				
				
	Global settings are stored in index [-1]:
	[-1] = {
	
		["close_time"] = 600,		How long to keep the window open (in ms) on 
									startup	if no key is being held down. Going
									lower than 600ms will probably cause the menu 
									to keep opening and closing.
	
	
									Global color settings:
		["col_main"] = {			Normal button color for buttons in this menu
			[1] = 0.0,				R
			[2] = 1.0,				G	(values are from 0-1)
			[3] = 1.0,				B
			
		["col_tog"] = {				Toggled color, for use with
			...						i.e. "Options: Toggle metronome"
			
		["col_hvr"] = {				Mouse-over color
			...
			
		["col_bg"] = {				Background color
			...
			
		["contexts"] = {			What menu to open on startup for a given mouse
			["mcp|empty"] = 10,		context. Contexts can be assigned with menu 
									numbers or aliases, i.e.
										20
										stuff
									
									If a particular context isn't given a menu, 
									it will	look up one 'level' at a time until
									it finds a match.
									
									Example:									
									The menu was opened with the mouse cursor over 
									an empty area of a track in the Arrange view.
									The script will look for:
										["arrange|track|empty"]
									then:
										["arrange|track"]
									then:
										["arrange"]
									
									If there's still no match, it will open menu 0.				
									(see the Setup script's Context tab for a list
									of available contexts)
									
		["fonts"] = {				Font settings
		
			[1] = 	{				1 - Normal buttons
									2 - Menus
									3 - Preview text
									
				"Calibri", 			Font face. See the note below.
				
				16, 				Size
				
				"b"					Flags. Just a string listing:
										b	bold
										i	italics
										u	underline
										
									The order doesn't matter, i.e. this would be
									perfectly fine: "iub"
									
										
									Important: Font names are really picky, and will
									default back to Arial if you get them wrong. The
									Setup script provides a green/red light for each
									font to let you know if it's correct or not.
									
									Unfortunately, the names are often not what you
									see when using them in Office, etc...
									
									To get a font's name in Windows:
									1. Find the .ttf file in your Windows\Fonts folder
									2. Right-click it, select Properties
									3. Select the Details tab
									4. The first field, "Name", is what you want to
									   be using here.
									   
									Mac users - I have no idea. 
									   
									   
									I know, it's stupid.
				
			
		
		["hvr_click"] = false,		Boolean - hover over a button to 'click' it
		["hvr_time"] = 200,			Hover time for ^^^ (in ms)
		
		
		["key_binds"] = {			Key bind settings
		
			["enabled"] = true,		Boolean - enables the assigned key binds
		
			["hints"] =	true,		Boolean - display key binds outside the menu ring
			
			["last_num"] = 1,		Last menu size selected in the setup script (1-13)
		
			[4] =	{				Menu size for each set of bindings. (4-16)
			
				[1] = "r",			Key bind for the given button number.
				
										-1	=	Center button
										1	=	Always the button facing right
		
		
		["key_mode"] = 1,			What to do when the shortcut key is released
									(1-3, see the options in the Setup script)
									
		["last_tab"] = 1,			The last tab that was active in the Setup script
									
		["mouse_mode"] = 1,			What to do when the mouse is clicked
									(1-3, see the options in the Setup script)
									
									
		["num_btns"] = 8,			Number of buttons for new menus to start with
		
		["preview"] = true,			Whether or not to preview a menu's buttons when
									hovering the mouse over it.
									
		
									Button radiuses/target areas:
		["ra"] = 48,				Center button
		["rb"] = 60,				Currently unused
		["rc"] = 116,				Inside of the button ring
		["rd"] = 192,				Outside of the button ring
		["re"] = 192,				Threshold for tracking Swipes
		
									Note that the preview labels when hovering over
									a menu are drawn with a radius of (rc - ra), so
									adjusting these will affect the labels as well.
		
		["swipe"] = {				Parameters for the Swiping feature:
		
			["accel"] = 65,			Start sensitivity
			["actions"]	= true,		Whether Swipes can trigger actions, or just menus
			["decel"] = 10,			Stop sensitivity
			["enabled"] = true,		Whether Swiping mode is active or not
			["menu"] = 0,			What menu to use for Swipe actions...
			["mode"] = 1,		...if this is set to 2. Setting it to 1 will always
									use the current menu
			["stop"] = 20,			Stop time for Swipes, in milliseconds
			
		
]]--


return {
	[-1] = {
		["close_time"] = 600,
		["col_bg"] = {
			[1] = 0.2,
			[2] = 0.2,
			[3] = 0.2,
		},
		["col_hvr"] = {
			[1] = 0.878,
			[2] = 0.878,
			[3] = 0.878,
		},
		["col_main"] = {
			[1] = 0.753,
			[2] = 0.753,
			[3] = 0.753,
		},
		["col_tog"] = {
			[1] = 0,
			[2] = 0.753,
			[3] = 0,
		},
		["contexts"] = {
		},
		["fonts"] = {
			[1] = {
				[1] = "Calibri",
				[2] = 16,
				[3] = "b",
			},
			[2] = {
				[1] = "Calibri",
				[2] = 16,
				[3] = "bu",
			},
			[3] = {
				[1] = "Calibri",
				[2] = 14,
			},
		},
		["hvr_click"] = false,
		["hvr_time"] = 200,
		["key_binds"] = {
			[4] = {
			},
			[5] = {
			},
			[6] = {
			},
			[7] = {
			},
			[8] = {
			},
			[9] = {
			},
			[10] = {
			},
			[11] = {
			},
			[12] = {
			},
			[13] = {
			},
			[14] = {
			},
			[15] = {
			},
			[16] = {
			},
			["enabled"] = false,
			["hints"] = false,
			["last_num"] = 8,
		},
		["key_mode"] = 1,
		["last_tab"] = 1,
		["mouse_mode"] = 1,
		["num_btns"] = 8,
		["preview"] = true,
		["ra"] = 48,
		["rb"] = 60,
		["rc"] = 116,
		["rd"] = 192,
		["re"] = 192,
		["swipe"] = {
			["accel"] = 65,
			["actions"] = false,
			["decel"] = 10,
			["menu"] = 0,
			["menu_mode"] = 1,
			["stop"] = 20,
		},
	},
	[0] = {
		[0] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[1] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[2] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[3] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[4] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[5] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[6] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
		[7] = {
			["act"] = "",
			["lbl"] = "Empty",
		},
	},
}