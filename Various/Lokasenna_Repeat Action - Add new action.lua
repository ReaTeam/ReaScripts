--[[
	NoIndex: true
--]]

-- Licensed under the GNU GPL v3


local function Msg(str)
	reaper.ShowConsoleMsg(tostring(str).."\n")
end



local ret, csv = reaper.GetUserInputs("Repeat Action - Add new action", 4, "Action ID:,File alias:,How often (s),MIDI (y/n):", ",,0.6,n")


if ret then
	
	local act, alias, interval, midi = string.match(csv, "([^,]+),([^,]*),([^,]+),([^,]+)")
	
	if not (act and interval and midi) then
		reaper.ShowMessageBox("Invalid parameters.", "Whoops", 0)
		return 0
	end
	
	local script_path = debug.getinfo(1,'S').source:match[[^@?(.*[\/])[^\/]-$]]
						.. "Lokasenna_Repeat Action - " 
						.. (alias or tostring(act))
						.. ".lua"
						
	local file = io.open(script_path, "w+") or nil
	
	if not file then
		reaper.ShowMessageBox("Couldn't create the file.", "Whoops", 0)
		return 0
	end
	
	local str_pre =
[=[--[[
	This file was generated by Lokasenna_Repeat Action - Add new action.lua
--]]


]=]

	local str_vars = 	  'act = "'..act..'"\n'
						.."interval = "..interval.."\n"
						.."midi = "..tostring(midi == "y").."\n\n"
	
	local str_suff =
[=[script_path = debug.getinfo(1,'S').source:match[[^@?(.*[\/])[^\/]-$]]
dofile(script_path .. "Lokasenna_Repeat Action.lua")]=]
	
	local str = str_pre .. str_vars .. str_suff
	
	file:write(str)
	
	io.close(file)
	
	reaper.AddRemoveReaScript( true, (midi == "n" and 0 or 32060), script_path, true )
	
end