--[[
 * ReaScript Name: Theme variable descriptions
 * Author: amagalma, X-Raym
 * About: Parsed from reascripthelp.html. Just copy paste and search replace with regex `(.+) : (.+) \-\-.+` to `  { k = '$1', v = '$2' },`.
 * Repository: ReaTeam ReaScripts
 * Repository URI: https://github.com/ReaTeam/ReaScripts
 * Licence: GPL v3
 * REAPER: 5.0
 * Version: 1.1
 * Provides: [nomain] .
--]]

--[[
 * Changelog:
 * v1.1 (2022-07-18)
	+ Sorted version
 * v1.0.1 (2022-07-18)
	+ v6.63 variables
 * v1.0 (2021-03-17)
	+ Initial Reapack Release
--]]

theme_var_descriptions_sorted = {
  { k = 'col_main_bg2', v = 'Main window/transport background' },
  { k = 'col_main_text2', v = 'Main window/transport text' },
  { k = 'col_main_textshadow', v = 'Main window text shadow (ignored if too close to text color)' },
  { k = 'col_main_3dhl', v = 'Main window 3D highlight' },
  { k = 'col_main_3dsh', v = 'Main window 3D shadow' },
  { k = 'col_main_resize2', v = 'Main window pane resize mouseover' },
  { k = 'col_main_text', v = 'Themed window text' },
  { k = 'col_main_bg', v = 'Themed window background' },
  { k = 'col_main_editbk', v = 'Themed window edit background' },
  { k = 'col_nodarkmodemiscwnd', v = 'Do not use window theming on macOS dark mode' },
  { k = 'col_transport_editbk', v = 'Transport edit background' },
  { k = 'col_toolbar_text', v = 'Toolbar button text' },
  { k = 'col_toolbar_text_on', v = 'Toolbar button enabled text' },
  { k = 'col_toolbar_frame', v = 'Toolbar frame when floating or docked' },
  { k = 'toolbararmed_color', v = 'Toolbar button armed color' },
  { k = 'toolbararmed_drawmode', v = 'Toolbar button armed fill mode' },
  { k = 'io_text', v = 'I/O window text' },
  { k = 'io_3dhl', v = 'I/O window 3D highlight' },
  { k = 'io_3dsh', v = 'I/O window 3D shadow' },
  { k = 'genlist_bg', v = 'Window list background' },
  { k = 'genlist_fg', v = 'Window list text' },
  { k = 'genlist_grid', v = 'Window list grid lines' },
  { k = 'genlist_selbg', v = 'Window list selected row' },
  { k = 'genlist_selfg', v = 'Window list selected text' },
  { k = 'genlist_seliabg', v = 'Window list selected row (inactive)' },
  { k = 'genlist_seliafg', v = 'Window list selected text (inactive)' },
  { k = 'genlist_hilite', v = 'Window list highlighted text' },
  { k = 'genlist_hilite_sel', v = 'Window list highlighted selected text' },
  { k = 'col_buttonbg', v = 'Button background' },
  { k = 'col_tcp_text', v = 'Track panel text' },
  { k = 'col_tcp_textsel', v = 'Track panel (selected) text' },
  { k = 'col_seltrack', v = 'Selected track control panel background' },
  { k = 'col_seltrack2', v = 'Unselected track control panel background (enabled with a checkbox above)' },
  { k = 'tcplocked_color', v = 'Locked track control panel overlay color' },
  { k = 'tcplocked_drawmode', v = 'Locked track control panel fill mode' },
  { k = 'col_tracklistbg', v = 'Empty track list area' },
  { k = 'col_mixerbg', v = 'Empty mixer list area' },
  { k = 'col_arrangebg', v = 'Empty arrange view area' },
  { k = 'arrange_vgrid', v = 'Empty arrange view area vertical grid shading' },
  { k = 'col_fadearm', v = 'Fader background when automation recording' },
  { k = 'col_fadearm2', v = 'Fader background when automation playing' },
  { k = 'col_fadearm3', v = 'Fader background when in inactive touch/latch' },
  { k = 'col_tl_fg', v = 'Timeline foreground' },
  { k = 'col_tl_fg2', v = 'Timeline foreground (secondary markings)' },
  { k = 'col_tl_bg', v = 'Timeline background' },
  { k = 'col_tl_bgsel', v = 'Time selection color' },
  { k = 'timesel_drawmode', v = 'Time selection fill mode' },
  { k = 'col_tl_bgsel2', v = 'Timeline background (in loop points)' },
  { k = 'col_trans_bg', v = 'Transport status background' },
  { k = 'col_trans_fg', v = 'Transport status text' },
  { k = 'playrate_edited', v = 'Project play rate control when not 1.0' },
  { k = 'col_mi_label', v = 'Media item label' },
  { k = 'col_mi_label_sel', v = 'Media item label (selected)' },
  { k = 'col_mi_label_float', v = 'Floating media item label' },
  { k = 'col_mi_label_float_sel', v = 'Floating media item label (selected)' },
  { k = 'col_mi_bg', v = 'Media item background (odd tracks)' },
  { k = 'col_mi_bg2', v = 'Media item background (even tracks)' },
  { k = 'col_tr1_itembgsel', v = 'Media item background selected (odd tracks)' },
  { k = 'col_tr2_itembgsel', v = 'Media item background selected (even tracks)' },
  { k = 'itembg_drawmode', v = 'Media item background fill mode' },
  { k = 'col_tr1_peaks', v = 'Media item peaks (odd tracks)' },
  { k = 'col_tr2_peaks', v = 'Media item peaks (even tracks)' },
  { k = 'col_tr1_ps2', v = 'Media item peaks when selected (odd tracks)' },
  { k = 'col_tr2_ps2', v = 'Media item peaks when selected (even tracks)' },
  { k = 'col_peaksedge', v = 'Media item peaks edge highlight (odd tracks)' },
  { k = 'col_peaksedge2', v = 'Media item peaks edge highlight (even tracks)' },
  { k = 'col_peaksedgesel', v = 'Media item peaks edge highlight when selected (odd tracks)' },
  { k = 'col_peaksedgesel2', v = 'Media item peaks edge highlight when selected (even tracks)' },
  { k = 'cc_chase_drawmode', v = 'Media item MIDI CC peaks fill mode' },
  { k = 'col_peaksfade', v = 'Media item peaks when active in crossfade editor (fade-out)' },
  { k = 'col_peaksfade2', v = 'Media item peaks when active in crossfade editor (fade-in)' },
  { k = 'col_mi_fades', v = 'Media item fade/volume controls' },
  { k = 'fadezone_color', v = 'Media item fade quiet zone fill color' },
  { k = 'fadezone_drawmode', v = 'Media item fade quiet zone fill mode' },
  { k = 'fadearea_color', v = 'Media item fade full area fill color' },
  { k = 'fadearea_drawmode', v = 'Media item fade full area fill mode' },
  { k = 'col_mi_fade2', v = 'Media item edges of controls' },
  { k = 'col_mi_fade2_drawmode', v = 'Media item edges of controls blend mode' },
  { k = 'item_grouphl', v = 'Media item edge when selected via grouping' },
  { k = 'col_offlinetext', v = 'Media item "offline" text' },
  { k = 'col_stretchmarker', v = 'Media item stretch marker line' },
  { k = 'col_stretchmarker_h0', v = 'Media item stretch marker handle (1x)' },
  { k = 'col_stretchmarker_h1', v = 'Media item stretch marker handle (>1x)' },
  { k = 'col_stretchmarker_h2', v = 'Media item stretch marker handle (<1x)' },
  { k = 'col_stretchmarker_b', v = 'Media item stretch marker handle edge' },
  { k = 'col_stretchmarkerm', v = 'Media item stretch marker blend mode' },
  { k = 'col_stretchmarker_text', v = 'Media item stretch marker text' },
  { k = 'col_stretchmarker_tm', v = 'Media item transient guide handle' },
  { k = 'take_marker', v = 'Media item take marker' },
  { k = 'selitem_tag', v = 'Selected media item bar color' },
  { k = 'activetake_tag', v = 'Active media item take bar color' },
  { k = 'col_tr1_bg', v = 'Track background (odd tracks)' },
  { k = 'col_tr2_bg', v = 'Track background (even tracks)' },
  { k = 'selcol_tr1_bg', v = 'Selected track background (odd tracks)' },
  { k = 'selcol_tr2_bg', v = 'Selected track background (even tracks)' },
  { k = 'col_tr1_divline', v = 'Track divider line (odd tracks)' },
  { k = 'col_tr2_divline', v = 'Track divider line (even tracks)' },
  { k = 'col_envlane1_divline', v = 'Envelope lane divider line (odd tracks)' },
  { k = 'col_envlane2_divline', v = 'Envelope lane divider line (even tracks)' },
  { k = 'mute_overlay_col', v = 'Muted/unsoloed track/item overlay color' },
  { k = 'mute_overlay_mode', v = 'Muted/unsoloed track/item overlay mode' },
  { k = 'inactive_take_overlay_col', v = 'Inactive take overlay color' },
  { k = 'inactive_take_overlay_mode', v = 'Inactive take overlay mode' },
  { k = 'locked_overlay_col', v = 'Locked track/item overlay color' },
  { k = 'locked_overlay_mode', v = 'Locked track/item overlay mode' },
  { k = 'marquee_fill', v = 'Marquee fill' },
  { k = 'marquee_drawmode', v = 'Marquee fill mode' },
  { k = 'marquee_outline', v = 'Marquee outline' },
  { k = 'marqueezoom_fill', v = 'Marquee zoom fill' },
  { k = 'marqueezoom_drawmode', v = 'Marquee zoom fill mode' },
  { k = 'marqueezoom_outline', v = 'Marquee zoom outline' },
  { k = 'areasel_fill', v = 'Razor edit area fill' },
  { k = 'areasel_drawmode', v = 'Razor edit area fill mode' },
  { k = 'areasel_outline', v = 'Razor edit area outline' },
  { k = 'areasel_outlinemode', v = 'Razor edit area outline mode' },
  { k = 'col_cursor', v = 'Edit cursor' },
  { k = 'col_cursor2', v = 'Edit cursor (alternate)' },
  { k = 'playcursor_color', v = 'Play cursor' },
  { k = 'playcursor_drawmode', v = 'Play cursor fill mode' },
  { k = 'col_gridlines2', v = 'Grid lines (start of measure)' },
  { k = 'col_gridlines2dm', v = 'Grid lines (start of measure) - draw mode' },
  { k = 'col_gridlines3', v = 'Grid lines (start of beats)' },
  { k = 'col_gridlines3dm', v = 'Grid lines (start of beats) - draw mode' },
  { k = 'col_gridlines', v = 'Grid lines (in between beats)' },
  { k = 'col_gridlines1dm', v = 'Grid lines (in between beats) - draw mode' },
  { k = 'guideline_color', v = 'Editing guide line color' },
  { k = 'guideline_drawmode', v = 'Editing guide fill mode' },
  { k = 'region', v = 'Regions' },
  { k = 'region_lane_bg', v = 'Region lane background' },
  { k = 'region_lane_text', v = 'Region lane text' },
  { k = 'marker', v = 'Markers' },
  { k = 'marker_lane_bg', v = 'Marker lane background' },
  { k = 'marker_lane_text', v = 'Marker lane text' },
  { k = 'col_tsigmark', v = 'Time signature change marker' },
  { k = 'ts_lane_bg', v = 'Time signature lane background' },
  { k = 'ts_lane_text', v = 'Time signature lane text' },
  { k = 'timesig_sel_bg', v = 'Time signature marker selected background' },
  { k = 'col_routinghl1', v = 'Routing matrix row highlight' },
  { k = 'col_routinghl2', v = 'Routing matrix column highlight' },
  { k = 'col_vudoint', v = 'Theme has interlaced VU meters' },
  { k = 'col_vuclip', v = 'VU meter clip indicator' },
  { k = 'col_vutop', v = 'VU meter top' },
  { k = 'col_vumid', v = 'VU meter middle' },
  { k = 'col_vubot', v = 'VU meter bottom' },
  { k = 'col_vuintcol', v = 'VU meter interlace/edge color' },
  { k = 'col_vumidi', v = 'VU meter midi activity' },
  { k = 'col_vuind1', v = 'VU (indicator) - no signal' },
  { k = 'col_vuind2', v = 'VU (indicator) - low signal' },
  { k = 'col_vuind3', v = 'VU (indicator) - med signal' },
  { k = 'col_vuind4', v = 'VU (indicator) - hot signal' },
  { k = 'mcp_sends_normal', v = 'Sends text: normal' },
  { k = 'mcp_sends_muted', v = 'Sends text: muted' },
  { k = 'mcp_send_midihw', v = 'Sends text: MIDI hardware' },
  { k = 'mcp_sends_levels', v = 'Sends level' },
  { k = 'mcp_fx_normal', v = 'FX insert text: normal' },
  { k = 'mcp_fx_bypassed', v = 'FX insert text: bypassed' },
  { k = 'mcp_fx_offlined', v = 'FX insert text: offline' },
  { k = 'mcp_fxparm_normal', v = 'FX parameter text: normal' },
  { k = 'mcp_fxparm_bypassed', v = 'FX parameter text: bypassed' },
  { k = 'mcp_fxparm_offlined', v = 'FX parameter text: offline' },
  { k = 'tcp_list_scrollbar', v = 'List scrollbar (track panel)' },
  { k = 'tcp_list_scrollbar_mode', v = 'List scrollbar (track panel) - draw mode' },
  { k = 'tcp_list_scrollbar_mouseover', v = 'List scrollbar mouseover (track panel)' },
  { k = 'tcp_list_scrollbar_mouseover_mode', v = 'List scrollbar mouseover (track panel) - draw mode' },
  { k = 'mcp_list_scrollbar', v = 'List scrollbar (mixer panel)' },
  { k = 'mcp_list_scrollbar_mode', v = 'List scrollbar (mixer panel) - draw mode' },
  { k = 'mcp_list_scrollbar_mouseover', v = 'List scrollbar mouseover (mixer panel)' },
  { k = 'mcp_list_scrollbar_mouseover_mode', v = 'List scrollbar mouseover (mixer panel) - draw mode' },
  { k = 'midi_rulerbg', v = 'MIDI editor ruler background' },
  { k = 'midi_rulerfg', v = 'MIDI editor ruler text' },
  { k = 'midi_grid2', v = 'MIDI editor grid line (start of measure)' },
  { k = 'midi_griddm2', v = 'MIDI editor grid line (start of measure) - draw mode' },
  { k = 'midi_grid3', v = 'MIDI editor grid line (start of beats)' },
  { k = 'midi_griddm3', v = 'MIDI editor grid line (start of beats) - draw mode' },
  { k = 'midi_grid1', v = 'MIDI editor grid line (between beats)' },
  { k = 'midi_griddm1', v = 'MIDI editor grid line (between beats) - draw mode' },
  { k = 'midi_trackbg1', v = 'MIDI editor background color (naturals)' },
  { k = 'midi_trackbg2', v = 'MIDI editor background color (sharps/flats)' },
  { k = 'midi_trackbg_outer1', v = 'MIDI editor background color, out of bounds (naturals)' },
  { k = 'midi_trackbg_outer2', v = 'MIDI editor background color, out of bounds (sharps/flats)' },
  { k = 'midi_selpitch1', v = 'MIDI editor background color, selected pitch (naturals)' },
  { k = 'midi_selpitch2', v = 'MIDI editor background color, selected pitch (sharps/flats)' },
  { k = 'midi_selbg', v = 'MIDI editor time selection color' },
  { k = 'midi_selbg_drawmode', v = 'MIDI editor time selection fill mode' },
  { k = 'midi_gridhc', v = 'MIDI editor CC horizontal center line' },
  { k = 'midi_gridhcdm', v = 'MIDI editor CC horizontal center line - draw mode' },
  { k = 'midi_gridh', v = 'MIDI editor CC horizontal line' },
  { k = 'midi_gridhdm', v = 'MIDI editor CC horizontal line - draw mode' },
  { k = 'midi_ccbut', v = 'MIDI editor CC lane add/remove buttons' },
  { k = 'midi_ccbut_text', v = 'MIDI editor CC lane button text' },
  { k = 'midi_ccbut_arrow', v = 'MIDI editor CC lane button arrow' },
  { k = 'midioct', v = 'MIDI editor octave line color' },
  { k = 'midi_inline_trackbg1', v = 'MIDI inline background color (naturals)' },
  { k = 'midi_inline_trackbg2', v = 'MIDI inline background color (sharps/flats)' },
  { k = 'midioct_inline', v = 'MIDI inline octave line color' },
  { k = 'midi_endpt', v = 'MIDI editor end marker' },
  { k = 'midi_notebg', v = 'MIDI editor note, unselected (midi_note_colormap overrides)' },
  { k = 'midi_notefg', v = 'MIDI editor note, selected (midi_note_colormap overrides)' },
  { k = 'midi_notemute', v = 'MIDI editor note, muted, unselected (midi_note_colormap overrides)' },
  { k = 'midi_notemute_sel', v = 'MIDI editor note, muted, selected (midi_note_colormap overrides)' },
  { k = 'midi_itemctl', v = 'MIDI editor note controls' },
  { k = 'midi_ofsn', v = 'MIDI editor note (offscreen)' },
  { k = 'midi_ofsnsel', v = 'MIDI editor note (offscreen, selected)' },
  { k = 'midi_editcurs', v = 'MIDI editor cursor' },
  { k = 'midi_pkey1', v = 'MIDI piano key color (naturals background, sharps/flats text)' },
  { k = 'midi_pkey2', v = 'MIDI piano key color (sharps/flats background, naturals text)' },
  { k = 'midi_pkey3', v = 'MIDI piano key color (selected)' },
  { k = 'midi_noteon_flash', v = 'MIDI piano key note-on flash' },
  { k = 'midi_leftbg', v = 'MIDI piano pane background' },
  { k = 'midifont_col_light_unsel', v = 'MIDI editor note text and control color, unselected (light)' },
  { k = 'midifont_col_dark_unsel', v = 'MIDI editor note text and control color, unselected (dark)' },
  { k = 'midifont_mode_unsel', v = 'MIDI editor note text and control mode, unselected' },
  { k = 'midifont_col_light', v = 'MIDI editor note text and control color (light)' },
  { k = 'midifont_col_dark', v = 'MIDI editor note text and control color (dark)' },
  { k = 'midifont_mode', v = 'MIDI editor note text and control mode' },
  { k = 'score_bg', v = 'MIDI notation editor background' },
  { k = 'score_fg', v = 'MIDI notation editor staff/notation/text' },
  { k = 'score_sel', v = 'MIDI notation editor selected staff/notation/text' },
  { k = 'score_timesel', v = 'MIDI notation editor time selection' },
  { k = 'score_loop', v = 'MIDI notation editor loop points, selected pitch' },
  { k = 'midieditorlist_bg', v = 'MIDI list editor background' },
  { k = 'midieditorlist_fg', v = 'MIDI list editor text' },
  { k = 'midieditorlist_grid', v = 'MIDI list editor grid lines' },
  { k = 'midieditorlist_selbg', v = 'MIDI list editor selected row' },
  { k = 'midieditorlist_selfg', v = 'MIDI list editor selected text' },
  { k = 'midieditorlist_seliabg', v = 'MIDI list editor selected row (inactive)' },
  { k = 'midieditorlist_seliafg', v = 'MIDI list editor selected text (inactive)' },
  { k = 'midieditorlist_bg2', v = 'MIDI list editor background (secondary)' },
  { k = 'midieditorlist_fg2', v = 'MIDI list editor text (secondary)' },
  { k = 'midieditorlist_selbg2', v = 'MIDI list editor selected row (secondary)' },
  { k = 'midieditorlist_selfg2', v = 'MIDI list editor selected text (secondary)' },
  { k = 'col_explorer_sel', v = 'Media explorer selection' },
  { k = 'col_explorer_seldm', v = 'Media explorer selection mode' },
  { k = 'col_explorer_seledge', v = 'Media explorer selection edge' },
  { k = 'explorer_grid', v = 'Media explorer grid, markers' },
  { k = 'explorer_pitchtext', v = 'Media explorer pitch detection text' },
  { k = 'docker_shadow', v = 'Tab control shadow' },
  { k = 'docker_selface', v = 'Tab control selected tab' },
  { k = 'docker_unselface', v = 'Tab control unselected tab' },
  { k = 'docker_text', v = 'Tab control text' },
  { k = 'docker_text_sel', v = 'Tab control text selected tab' },
  { k = 'docker_bg', v = 'Tab control background' },
  { k = 'windowtab_bg', v = 'Tab control background in windows' },
  { k = 'auto_item_unsel', v = 'Envelope: Unselected automation item' },
  { k = 'col_env1', v = 'Envelope: Volume (pre-FX)' },
  { k = 'col_env2', v = 'Envelope: Volume' },
  { k = 'env_trim_vol', v = 'Envelope: Trim Volume' },
  { k = 'col_env3', v = 'Envelope: Pan (pre-FX)' },
  { k = 'col_env4', v = 'Envelope: Pan' },
  { k = 'env_track_mute', v = 'Envelope: Mute' },
  { k = 'col_env5', v = 'Envelope: Master playrate' },
  { k = 'col_env6', v = 'Envelope: Master tempo' },
  { k = 'col_env7', v = 'Envelope: Width / Send volume' },
  { k = 'col_env8', v = 'Envelope: Send pan' },
  { k = 'col_env9', v = 'Envelope: Send volume 2' },
  { k = 'col_env10', v = 'Envelope: Send pan 2' },
  { k = 'env_sends_mute', v = 'Envelope: Send mute' },
  { k = 'col_env11', v = 'Envelope: Audio hardware output volume' },
  { k = 'col_env12', v = 'Envelope: Audio hardware output pan' },
  { k = 'col_env13', v = 'Envelope: FX parameter 1' },
  { k = 'col_env14', v = 'Envelope: FX parameter 2' },
  { k = 'col_env15', v = 'Envelope: FX parameter 3' },
  { k = 'col_env16', v = 'Envelope: FX parameter 4' },
  { k = 'env_item_vol', v = 'Envelope: Item take volume' },
  { k = 'env_item_pan', v = 'Envelope: Item take pan' },
  { k = 'env_item_mute', v = 'Envelope: Item take mute' },
  { k = 'env_item_pitch', v = 'Envelope: Item take pitch' },
  { k = 'wiring_grid2', v = 'Wiring: Background' },
  { k = 'wiring_grid', v = 'Wiring: Background grid lines' },
  { k = 'wiring_border', v = 'Wiring: Box border' },
  { k = 'wiring_tbg', v = 'Wiring: Box background' },
  { k = 'wiring_ticon', v = 'Wiring: Box foreground' },
  { k = 'wiring_recbg', v = 'Wiring: Record section background' },
  { k = 'wiring_recitem', v = 'Wiring: Record section foreground' },
  { k = 'wiring_media', v = 'Wiring: Media' },
  { k = 'wiring_recv', v = 'Wiring: Receives' },
  { k = 'wiring_send', v = 'Wiring: Sends' },
  { k = 'wiring_fader', v = 'Wiring: Fader' },
  { k = 'wiring_parent', v = 'Wiring: Master/Parent' },
  { k = 'wiring_parentwire_border', v = 'Wiring: Master/Parent wire border' },
  { k = 'wiring_parentwire_master', v = 'Wiring: Master/Parent to master wire' },
  { k = 'wiring_parentwire_folder', v = 'Wiring: Master/Parent to parent folder wire' },
  { k = 'wiring_pin_normal', v = 'Wiring: Pins normal' },
  { k = 'wiring_pin_connected', v = 'Wiring: Pins connected' },
  { k = 'wiring_pin_disconnected', v = 'Wiring: Pins disconnected' },
  { k = 'wiring_horz_col', v = 'Wiring: Horizontal pin connections' },
  { k = 'wiring_sendwire', v = 'Wiring: Send hanging wire' },
  { k = 'wiring_hwoutwire', v = 'Wiring: Hardware output wire' },
  { k = 'wiring_recinputwire', v = 'Wiring: Record input wire' },
  { k = 'wiring_hwout', v = 'Wiring: System hardware outputs' },
  { k = 'wiring_recinput', v = 'Wiring: System record inputs' },
  { k = 'group_0', v = 'Group #1' },
  { k = 'group_1', v = 'Group #2' },
  { k = 'group_2', v = 'Group #3' },
  { k = 'group_3', v = 'Group #4' },
  { k = 'group_4', v = 'Group #5' },
  { k = 'group_5', v = 'Group #6' },
  { k = 'group_6', v = 'Group #7' },
  { k = 'group_7', v = 'Group #8' },
  { k = 'group_8', v = 'Group #9' },
  { k = 'group_9', v = 'Group #10' },
  { k = 'group_10', v = 'Group #11' },
  { k = 'group_11', v = 'Group #12' },
  { k = 'group_12', v = 'Group #13' },
  { k = 'group_13', v = 'Group #14' },
  { k = 'group_14', v = 'Group #15' },
  { k = 'group_15', v = 'Group #16' },
  { k = 'group_16', v = 'Group #17' },
  { k = 'group_17', v = 'Group #18' },
  { k = 'group_18', v = 'Group #19' },
  { k = 'group_19', v = 'Group #20' },
  { k = 'group_20', v = 'Group #21' },
  { k = 'group_21', v = 'Group #22' },
  { k = 'group_22', v = 'Group #23' },
  { k = 'group_23', v = 'Group #24' },
  { k = 'group_24', v = 'Group #25' },
  { k = 'group_25', v = 'Group #26' },
  { k = 'group_26', v = 'Group #27' },
  { k = 'group_27', v = 'Group #28' },
  { k = 'group_28', v = 'Group #29' },
  { k = 'group_29', v = 'Group #30' },
  { k = 'group_30', v = 'Group #31' },
  { k = 'group_31', v = 'Group #32' },
  { k = 'group_32', v = 'Group #33' },
  { k = 'group_33', v = 'Group #34' },
  { k = 'group_34', v = 'Group #35' },
  { k = 'group_35', v = 'Group #36' },
  { k = 'group_36', v = 'Group #37' },
  { k = 'group_37', v = 'Group #38' },
  { k = 'group_38', v = 'Group #39' },
  { k = 'group_39', v = 'Group #40' },
  { k = 'group_40', v = 'Group #41' },
  { k = 'group_41', v = 'Group #42' },
  { k = 'group_42', v = 'Group #43' },
  { k = 'group_43', v = 'Group #44' },
  { k = 'group_44', v = 'Group #45' },
  { k = 'group_45', v = 'Group #46' },
  { k = 'group_46', v = 'Group #47' },
  { k = 'group_47', v = 'Group #48' },
  { k = 'group_48', v = 'Group #49' },
  { k = 'group_49', v = 'Group #50' },
  { k = 'group_50', v = 'Group #51' },
  { k = 'group_51', v = 'Group #52' },
  { k = 'group_52', v = 'Group #53' },
  { k = 'group_53', v = 'Group #54' },
  { k = 'group_54', v = 'Group #55' },
  { k = 'group_55', v = 'Group #56' },
  { k = 'group_56', v = 'Group #57' },
  { k = 'group_57', v = 'Group #58' },
  { k = 'group_58', v = 'Group #59' },
  { k = 'group_59', v = 'Group #60' },
  { k = 'group_60', v = 'Group #61' },
  { k = 'group_61', v = 'Group #62' },
  { k = 'group_62', v = 'Group #63' },
  { k = 'group_63', v = 'Group #64' },
}

theme_var_descriptions = {} -- original variable name, non-sorted, for backward compatibility
for i, entry in ipairs( theme_var_descriptions_sorted ) do
  if localize then
    entry.v = reaper.LocalizeString(entry.v, "theme")
  end
  theme_var_descriptions[entry.k] = entry.v
end
