noindex: true
desc: One Small Step Helper
version: 0.1
author: Ben 'Talagan' Babut

slider1:0<0,3153600000,0.001>Sustain Pedal Activity
slider2:0<0,127,1>Notes in buffer

// Generate sliders for held notes
<?
  note_buffer_size   = 32;
  note_slider_offset = 10;
  ni = 0;
  while(ni < note_buffer_size) (
    printf("slider%d:<0,127,1>Note %d Pitch\n",    note_slider_offset + 3*ni + 0, ni);
    printf("slider%d:<0,15,1> Note %d Channel\n",  note_slider_offset + 3*ni + 1, ni);
    printf("slider%d:<0,127,1>Note %d Velocity\n", note_slider_offset + 3*ni + 2, ni);

    ni += 1;
  );
?>

@init

last_slider_update = 0;

// Use a buffer to retain note states, and update sliders in @block
// Instead of updating sliders directly.
// This avoid glitches due to undo operations that could restore FX params
// And we don't want that

MAX_NOTE        = 32;
note_buf        = 0;
note_cnt        = 0;

function spitch(note_num) ( (10 + 3*note_num + 0) );
function schan(note_num)  ( (10 + 3*note_num + 1) );
function svel(note_num)   ( (10 + 3*note_num + 2) );

// Only note_buf is used so free the memory after it.
freembuf(32 * 3 + 1);

function addRemoveNoteFromBuffer(m1,m2,m3)
  local(s,c,n,v,t,i,j,init_buflen)
(
  init_buflen = note_cnt;

  s = m1&$xF0;
  n = m2;     // note
  c = m1&$xF; // channel
  v = m3;     // velocity

  i = -1;
  while // look for this note|channel already in the buffer
  (
    i = i+1;
    i < note_cnt && i < MAX_NOTE && (notebuf[3*i]|0 != n || notebuf[3*i + 1]|0 != c);
  );

  (i == MAX_NOTE)?(
    -1;
  ):(

    (s == $x90 && v > 0) ?
    (

      // note-on, add to buffer
    notebuf[3*i+0]  = n;
    notebuf[3*i+1]  = c;
    notebuf[3*i+2]  = v;

      i == note_cnt ? note_cnt = note_cnt+1;
    ):
    (

      // note-off, remove from buffer
      i < note_cnt ?
      (
        j = i;
        while(j < note_cnt)
        (
          // Shift all sliders to delete current entry
          notebuf[3*j+0]  = notebuf[3*(j+1)+0];
          notebuf[3*j+1]  = notebuf[3*(j+1)+1];
          notebuf[3*j+2]  = notebuf[3*(j+1)+2];
          j = j + 1;
        );
        while(j < MAX_NOTE)
        (
          notebuf[3*j+0] = 0;
          notebuf[3*j+1] = 0;
          notebuf[3*j+2] = 0;
          j = j + 1;
        );

        note_cnt = note_cnt - 1;
      );
    );
  );

  note_cnt==init_buflen ? -1; //return value for nothing added/removed
);

@block

function updateSliders() (
  i = 0;
  while(i < MAX_NOTE) (
    slider(spitch(i)) = note_buf[3*i+0];
    slider(schan(i))  = note_buf[3*i+1];
    slider(svel(i))   = note_buf[3*i+2];
    i = i+1;
  );
  slider2 = note_cnt;
);

function main()
  local(offset,msg1,msg2,msg3)
(
  while (midirecv(offset,msg1,msg2,msg3))
  (
    (msg1&$xF0==$x90) ?
      addRemoveNoteFromBuffer(msg1,msg2,msg3);

    (msg1&$xF0==$x80) ?
      addRemoveNoteFromBuffer(msg1,msg2,msg3);

    (msg1&$xF0==$xB0 && msg2 == 64 && msg3 > 0) ?
      slider1 = time_precise();

    (msg1&$xF0==$xB0 && msg2 == 64 && msg3 == 0) ?
      slider1 = 0;

    midisend(offset,msg1,msg2,msg3);
  )
);

main();
t = time_precise();
(t - last_slider_update > 0.05)?(
  updateSliders();
  last_slider_update = t;
);
